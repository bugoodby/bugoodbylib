<!DOCTYPE html>
<html lang="ja">
<head>
	<meta http-equiv="Content-Style-Type" content="text/css" /> 
	<meta http-equiv="Content-Script-Type" content="text/javascript" /> 
	<meta http-equiv="Content-Type" content="text/html; charset=shift_jis" /> 
	<title>toolbox</title> 
	<style>
html,body {
	height: 100%;
	width: 100%;
	margin: 0;
	padding: 0;
	border: 0 none;
}
html {
	overflow-y: scroll;
}
body {
	background-color: #e0e0e0;
	font: normal 12px "メイリオ", Meiryo, "ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro", "Lucida Sans Unicode", "Lucida Grande", "Lucida Sans", Arial, sans-serif;
}
#wrapper {
	text-align: left;
	margin: 0 auto 0;
	width: 95%;
	background-color: #ffffff;
}
#contents {
	position: relative;
	padding: 20px;
	border-left: 0px;
	border-right: 0px;
	border-top: 10px solid #e0e0e0;
	border-bottom: 10px solid #e0e0e0;
}
textarea.twopane {
	padding: 2px;
	border: 1px solid #b8b8b8;
	width: 95%;
	height: 26em;
}
table.twopane {
	border: 0px;
	width: 100%;
}
td.twopane {
	width: 50%;
}
input.solid {
	padding: 2px;
	border: 1px solid #b8b8b8;
	width: 95%;
}
input.blue {
	padding: 4px 10px;
	background-color: #248;
	color: #ffffff;
	border-style: none;
}
input.blue:hover {
    background-color: #24d;
}
textarea.scpane {
	padding: 2px;
	border: 1px solid #b8b8b8;
	width: 95%;
	height: 22em;
}
	</style>
	<script type="text/javascript">
<!--
window.resizeTo(750, 600);    //  ウィンドウサイズ設定
//window.moveTo(50, 50);      //  ウィンドウ移動

var userAgent = window.navigator.userAgent.toLowerCase();
if (userAgent.indexOf('msie') != -1) {
	var newline = "\r\n";
} else {
	var newline = "\n";
}

//-----------------------------------------------
function execSort()
{
	var src = document.getElementById("intext").value;
	var dst = "";
	var lines = src.split(newline);
	lines.sort();
	for ( var i in lines ) {
		dst += lines[i] + newline;
	}
	document.getElementById("outtext").value = dst;
}
function execUnique()
{
	var src = document.getElementById("intext").value;
	var dst = "";
	var lines = src.split(newline);
	var prevLine = "";
	for ( var i in lines ) {
		lines[i] = lines[i].replace(/^\s+|\s+$/g, "");
	}
	lines.sort();
	for ( var i in lines ) {
		if ( lines[i].length > 0 && prevLine != lines[i] ) {
			dst += lines[i] + newline;
		}
		prevLine = lines[i];
	}
	if ( dst == "" ) {
		dst += "+++ unique OK! +++";
	}
	document.getElementById("outtext").value = dst;
}
function execTr()
{
	var delim = document.getElementById("delimiter").value;
	var src = document.getElementById("intext").value;
	var dst = "";
	var lines = src.split(newline);
	for ( var i in lines ) {
		var words = lines[i].split(delim);
		for ( var j in words ) {
			dst += words[j] + newline;
		}
	}
	document.getElementById("outtext").value = dst;
}
function execStrip()
{
	var src = document.getElementById("intext").value;
	var dst = "";
	var lines = src.split(newline);
	for ( var i in lines ) {
		dst += lines[i].replace(/^\s*|\s*$/g, "") + newline;
	}
	document.getElementById("outtext").value = dst;
}
function execPickUp()
{
	var key = document.getElementById("pickupkey").value;
	var re = new RegExp(key);
	var src = document.getElementById("intext").value;
	var dst = "";
	var lines = src.split(newline);
	for ( var i in lines ) {
		if ( lines[i].match(re) ) {
			dst += RegExp.$1 + newline;
		} else {
			dst += newline;
		}
	}
	document.getElementById("outtext").value = dst;
}
function execPathEscape()
{
	var src = document.getElementById("intext").value;
	var dst = src.replace(/\\/g, "\\\\");
	document.getElementById("outtext").value = dst;
}
//-----------------------------------------------
function onClickExec()
{
	var mode = "";
	var modeAry = document.getElementsByName("mode");
	for ( var i = 0; i < modeAry.length; i++ ) {
		if ( modeAry[i].checked ) {
			mode = modeAry[i].value;
		}
	}
	switch ( mode ) {
	case "sort": execSort(); break;
	case "unique": execUnique(); break;
	case "tr": execTr(); break;
	case "strip": execStrip(); break;
	case "pickup": execPickUp(); break;
	case "path_esc": execPathEscape(); break;
	case "Diff": execDiff(); break;
	case "SortAndDiffExcel": execSortAndDiffExcel(); break;
	default: break;
	}
}
function onClickClear()
{
	document.getElementById("intext").value = "";
	document.getElementById("outtext").value = "";
	document.getElementById("counted_text").value = "";
	document.unit.textMM.value = "";
	document.unit.textINCH.value = "";
	document.unit.text17200INCH.value = "";
	document.unit.textPIXEL.value = "";
	document.unit.textPIXEL1200.value = "";
	document.getElementById("lefttext").value = "";
	document.getElementById("righttext").value = "";
}
//-----------------------------------------------
function execDiff()
{
	var diffApp = "D:\\documents\\WinMergeUa.exe"
	var fso = new ActiveXObject("Scripting.FileSystemObject");
	var wshShell = new ActiveXObject("WScript.Shell");
	
	var save_file = function( path, data ) {
		var ws = fso.OpenTextFile(path, 2, true, 0);
		ws.Write(data);
		ws.close();
	}
	
	if ( !fso.FileExists(diffApp) ) {
		wshShell.Popup("エラー：" + diffApp + "がありません");
		return;
	}
	
	var src = document.getElementById("lefttext").value;
	var path1 = wshShell.CurrentDirectory + "\\lefttext.txt";
	save_file(path1, src);
	
	var src = document.getElementById("righttext").value;
	var path2 = wshShell.CurrentDirectory + "\\righttext.txt";
	save_file(path2, src);
	
	wshShell.Run(diffApp + " \"" + path1 + "\" \"" + path2 + "\"" , 1, false);
}
function execSortAndDiffExcel()
{
	var fso = new ActiveXObject("Scripting.FileSystemObject");
	
	var RGB = function(red, green, blue) {
		return (parseInt(red) + (parseInt(green) * 256) + (parseInt(blue) * 65536));
	}
	
	// ユーザー設定値
	var HEADER_ROW = 2;			// ヘッダの行番号
	var LEFTLIST_COL = 2;		// 文字列リスト(左)を書き出す列番号
	var RIGHTLIST_COL = 3;		// 文字列リスト(右)を書き出す列番号
	// Excel定数
	var xlWorkbookNormal		= -4143;
	
	//------------------------------------------
	// 入力作業
	//------------------------------------------
	// 文字列リストを作成
	var src = document.getElementById("lefttext").value;
	var aryL = src.split(newline);
	var src = document.getElementById("righttext").value;
	var aryR = src.split(newline);
	
	var countL = aryL.length;
	var countR = aryR.length;
	
	// 文字列リストをソート
	aryL.sort();
	aryR.sort();
	
	//------------------------------------------
	// 出力作業
	//------------------------------------------
	// Excelオブジェクトの作成
	var objExcel = new ActiveXObject("Excel.Application");
	objExcel.Visible = true;
	objExcel.DisplayAlerts = true;
	
	// 出力ファイルを新規作成
	var objOutBook = objExcel.Workbooks.Add();
	var objOutSheet = objOutBook.Worksheets(1);
	objOutSheet.Select();
	
	// ヘッダの作成
	objOutSheet.Cells(HEADER_ROW, LEFTLIST_COL).Value = "Left : " + countL;
	objOutSheet.Cells(HEADER_ROW, LEFTLIST_COL).Interior.Color = RGB(192,192,192);
	objOutSheet.Cells(HEADER_ROW, RIGHTLIST_COL).Value = "Right : " + countR;
	objOutSheet.Cells(HEADER_ROW, RIGHTLIST_COL).Interior.Color = RGB(192,192,192);
	
	// リスト比較結果の作成
	var i = HEADER_ROW + 1;
	var l = 0, r = 0;
	
	while ( (l < countL) && (r < countR) ) {
		if ( aryL[l] == aryR[r] ) {
			objOutSheet.Cells(i, LEFTLIST_COL).Value = aryL[l];
			objOutSheet.Cells(i, RIGHTLIST_COL).Value = aryR[r];
			l++;
			r++;
		}
		else if ( aryL[l] < aryR[r] ) {
			objOutSheet.Cells(i, LEFTLIST_COL).Value = aryL[l];
			objOutSheet.Cells(i, LEFTLIST_COL).Interior.Color = RGB(255,255,0);
			l++;
		}
		else {
			objOutSheet.Cells(i, RIGHTLIST_COL).Value = aryR[r];
			objOutSheet.Cells(i, RIGHTLIST_COL).Interior.Color = RGB(255,255,0);
			r++;
		}
		i++;
	}
	
	while ( l < countL ) {
		objOutSheet.Cells(i, LEFTLIST_COL).Value = aryL[l];
		objOutSheet.Cells(i, LEFTLIST_COL).Interior.Color = RGB(255,255,0);
		l++;
		i++;
	}
	while ( r < countR ) {
		objOutSheet.Cells(i, RIGHTLIST_COL).Value = aryR[r];
		objOutSheet.Cells(i, RIGHTLIST_COL).Interior.Color = RGB(255,255,0);
		r++;
		i++;
	}
	
	// 列の幅を自動調整
	objOutSheet.Cells(1, LEFTLIST_COL).EntireColumn.AutoFit();
	objOutSheet.Cells(1, RIGHTLIST_COL).EntireColumn.AutoFit();
	
	// オートフィルタの設定
	rs = objOutSheet.Cells(HEADER_ROW, LEFTLIST_COL).address;
	re = objOutSheet.Cells(i, RIGHTLIST_COL).address;
	objOutSheet.Range(rs, re).AutoFilter();
	
	// 出力ファイルの保存
	//var outXlsPath = WScript.ScriptFullName.replace(WScript.ScriptName, "diff_result.xls");
    //objOutBook.SaveAs(outXlsPath, xlWorkbookNormal);
	
	// クローズ
	//objOutBook.Close();
	//objExcel.Quit();
	
	// オブジェクトの破棄
	objExcel = null;
	fso = null;
}
//-----------------------------------------------
function onUpdateCount(src)
{
	var chars = src.length;
	var lines = 0;
	if ( src.length > 0 ) {
		lines = (src.match(/\n/g) || []).length;
		if ( src.slice(-1) != '\n' ) lines += 1;
	}
	document.getElementById("chars").value = chars;
	document.getElementById("lines").value = lines;
}
//-----------------------------------------------
function onUpdateUnitValue(type, val)
{
	var src = parseFloat(val);
	switch ( type ) {
	case 1: // 1/10mm
		document.unit.textINCH.value      = (src / 254);
		document.unit.text172INCH.value   = (src * 72 / 254);
		document.unit.text17200INCH.value = (src * 7200 / 254)
		document.unit.textPIXEL.value     = (src * 600 / 254);
		document.unit.textPIXEL1200.value = (document.unit.textPIXEL.value * 2);
		break;
	case 2: // inch
		document.unit.textMM.value        = (src * 254);
		document.unit.text172INCH.value   = (src * 72);
		document.unit.text17200INCH.value = (src * 7200);
		document.unit.textPIXEL.value     = (src * 600);
		document.unit.textPIXEL1200.value = (document.unit.textPIXEL.value * 2);
		break;
	case 3: // 1/7200inch
		document.unit.textMM.value        = (src * 254 / 7200);
		document.unit.text172INCH.value   = (src / 100);
		document.unit.textINCH.value      = (src / 7200);
		document.unit.textPIXEL.value     = (src * 600 / 7200);
		document.unit.textPIXEL1200.value = (document.unit.textPIXEL.value * 2);
		break;
	case 4: // pixel(600dpi)
		document.unit.textMM.value        = (src * 254 / 600);
		document.unit.textINCH.value      = (src / 600);
		document.unit.text172INCH.value   = (src * 72 / 600);
		document.unit.text17200INCH.value = (src * 7200 / 600);
		document.unit.textPIXEL1200.value = (src * 2);
		break;
	case 5: // pixel(1200dpi)
		document.unit.textMM.value        = (src * 254 / 1200);
		document.unit.textINCH.value      = (src / 1200);
		document.unit.text172INCH.value   = (src * 72 / 1200);
		document.unit.text17200INCH.value = (src * 7200 / 1200);
		document.unit.textPIXEL.value     = (src / 2);
		break;
	case 6: // 1/72inch
		document.unit.textMM.value        = (src * 254 / 72);
		document.unit.textINCH.value      = (src / 72);
		document.unit.text17200INCH.value = (src * 100);
		document.unit.textPIXEL.value     = (src * 600 / 72);
		document.unit.textPIXEL1200.value = (document.unit.textPIXEL.value * 2);
		break;
	default:
		break;
	}
}
//-----------------------------------------------
function modeChanged()
{
	var mode = "";
	var modeAry = document.getElementsByName("mode");
	for ( var i = 0; i < modeAry.length; i++ ) {
		if ( modeAry[i].checked ) {
			mode = modeAry[i].value;
		}
	}
	if ( mode == "strcnt" ) {
		document.getElementById("type1").style.display = "none";
		document.getElementById("type2").style.display = "";
		document.getElementById("type3").style.display = "none";
		document.getElementById("type4").style.display = "none";
	} else if ( mode == "uc" ) {
		document.getElementById("type1").style.display = "none";
		document.getElementById("type2").style.display = "none";
		document.getElementById("type3").style.display = "";
		document.getElementById("type4").style.display = "none";
	} else if ( mode == "Diff" || mode == "SortAndDiffExcel" ) {
		document.getElementById("type1").style.display = "none";
		document.getElementById("type2").style.display = "none";
		document.getElementById("type3").style.display = "none";
		document.getElementById("type4").style.display = "";
	} else {
		document.getElementById("type1").style.display = "";
		document.getElementById("type2").style.display = "none";
		document.getElementById("type3").style.display = "none";
		document.getElementById("type4").style.display = "none";
		if ( mode == "tr" ) {
			document.getElementById("tr_delimiter").style.display = "";
		} else {
			document.getElementById("tr_delimiter").style.display = "none";
		}
		if ( mode == "pickup" ) {
			document.getElementById("pickup_re").style.display = "";
		} else {
			document.getElementById("pickup_re").style.display = "none";
		}
	}
}
window.onload = modeChanged;
-->
	</script>
	<hta:application innerBorder="no" scroll="no"></hta:application>
</head>
<body>
 	<div id="wrapper"> 
		<div id="contents">
			<input type="radio" name="mode" onclick="modeChanged()" value="sort" checked>sort 
			<input type="radio" name="mode" onclick="modeChanged()" value="unique">unique 
			<input type="radio" name="mode" onclick="modeChanged()" value="tr">tr 
			<input type="radio" name="mode" onclick="modeChanged()" value="strip">strip 
			<input type="radio" name="mode" onclick="modeChanged()" value="pickup">pickup 
			<input type="radio" name="mode" onclick="modeChanged()" value="path_esc">path escape 
			<input type="radio" name="mode" onclick="modeChanged()" value="strcnt">string counter 
			<input type="radio" name="mode" onclick="modeChanged()" value="uc">unit change 
			<input type="radio" name="mode" onclick="modeChanged()" value="Diff">Diff 
			<input type="radio" name="mode" onclick="modeChanged()" value="SortAndDiffExcel">SortAndDiffExcel 
			<hr>
			<!-- general -->
			<div id="type1">
				<div id="tr_delimiter">demiliter: <input type="text" class="solid" id="delimiter" value=" "></div>
				<div id="pickup_re">RegExp: <input type="text" class="solid" id="pickupkey" value="(xxx_[a-zA-Z0-9_]*)"></div>
				<table class="twopane">
					<tr>
					<td class="twopane">
						input<br><textarea class="twopane" id="intext" wrap="off"></textarea>
					</td>
					<td class="twopane">
						output<br><textarea class="twopane" id="outtext" wrap="off"></textarea>
					</td>
					</tr>
				</table>
				<br>
				<input type="button" class="blue" name="sort" value="exec" onclick="onClickExec()">
				<input type="button" class="blue" name="clear" value="clear" onclick="onClickClear()">
			</div>
			<!-- string counter -->
			<div id="type2">
				input<br><textarea class="scpane" id="counted_text" wrap="on" onkeyup="onUpdateCount(value)"></textarea>
				<br><br>
				characters: <input type="text" class="solid" id="chars" value="0"><br>
				lines: <input type="text" class="solid" id="lines" value="0"><br>
				<br>
				<input type="button" class="blue" name="clear" value="clear" onclick="onClickClear()">
			</div>
			<!-- unit change -->
			<div id="type3">
				<form name="unit">
				<div>1/10mm</div>
				<input type="text" class="solid" name="textMM" size="50" maxlength="50" onclick="this.focus();this.select()" onkeyup="onUpdateUnitValue(1,value)">
				<br>
				<div>inch</div>
				<input type="text" class="solid" name="textINCH" size="50" maxlength="50" onclick="this.focus();this.select()" onkeyup="onUpdateUnitValue(2,value)">
				<br>
				<div>1/72inch</div>
				<input type="text" class="solid" name="text172INCH" size="50" maxlength="50" onclick="this.focus();this.select()" onkeyup="onUpdateUnitValue(6,value)">
				<br>
				<div>1/7200inch</div>
				<input type="text" class="solid" name="text17200INCH" size="50" maxlength="50" onclick="this.focus();this.select()" onkeyup="onUpdateUnitValue(3,value)">
				<br>
				<div>dot (600dpi)</div>
				<input type="text" class="solid" name="textPIXEL" size="50" maxlength="50" onclick="this.focus();this.select()" onkeyup="onUpdateUnitValue(4,value)">
				<br>
				<div>dot (1200dpi)</div>
				<input type="text" class="solid" name="textPIXEL1200" size="50" maxlength="50" onclick="this.focus();this.select()" onkeyup="onUpdateUnitValue(5,value)">
				<br><br>
				<input type="button" class="blue" name="clear" value="clear" onclick="onClickClear()">
				</form>
			</div>
			<!-- Diff -->
			<div id="type4">
				<table class="twopane">
					<tr>
					<td class="twopane">
						Left<br><textarea class="twopane" id="lefttext" wrap="off"></textarea>
					</td>
					<td class="twopane">
						Right<br><textarea class="twopane" id="righttext" wrap="off"></textarea>
					</td>
					</tr>
				</table>
				<br>
				<input type="button" class="blue" name="sort" value="exec" onclick="onClickExec()">
				<input type="button" class="blue" name="clear" value="clear" onclick="onClickClear()">
			</div>
		</div>
	</div>
</body>
</html>
